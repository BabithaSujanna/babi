{"dataflow":{"dfKey":"2cee8b00-3091-4149-b240-279a368ce6ca","name":"Dataflow_1736","tags":null,"description":"","definition":"{\"name\":\"Dataflow_1736\",\"description\":\"\",\"engineVariableName\":\"\",\"components\":[{\"udfNames\":[],\"componentId\":0,\"componentName\":\"startComponent\",\"tableName\":\"\",\"category\":\"Start\",\"componentType\":\"UDF\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":0,\"dependencies\":[],\"className\":\"com.datagaps.dataflow.models.UDFComponent\",\"executionOption\":\"\",\"excludeNotification\":\"Y\"},{\"partitionOptions\":{\"partitionType\":\"\",\"name\":\"\"},\"enableTrim\":\"N\",\"easyQueryDefJson\":{\"sqlQuery\":\"\"},\"componentId\":1,\"componentName\":\"JDBC 1\",\"tableName\":\"JDBC_1\",\"category\":\"Source\",\"componentType\":\"JDBC\",\"rank\":0,\"dataSourceName\":\"PostgreSQL\",\"displayRows\":50,\"dependencies\":[],\"options\":{\"dbTable\":\"select id,stack_id,create_time,serialized_context from public.context\"},\"className\":\"com.datagaps.dataflow.models.JDBCComponent\",\"isCheckpointEnabled\":\"N\",\"dataSourceLogicalName\":\"\",\"executionOption\":\"\",\"excludeNotification\":\"N\"}],\"isDeleteWorkSchemaTable\":\"N\"}","parameters":"[{\"name\":\"limit_rows\",\"defValueInInteractiveMode\":\"limit 10\",\"defValueInBatchMode\":\"limit 1000\"}]","version":3,"maxComponentId":1,"livyOptions":null,"isDeleted":"N","userName":null,"type":"dataflow","environmentName":"","folderPath":"Dataflow/ddd","workSchemaName":null},"analysis":[],"datamodels":[],"tagDetails":[]}